{"ast":null,"code":"import { environment } from './../../environments/environment.prod';\nimport { HttpRequest } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../shared/error-handling.service\";\nexport let TalentService = /*#__PURE__*/(() => {\n  class TalentService {\n    constructor(_http, _errorHandling) {\n      this._http = _http;\n      this._errorHandling = _errorHandling;\n      this.baseUrl = environment.baseApiUrl + \"Talent/\";\n      this.getUrl = this.baseUrl + \"get\";\n      this.postUrl = \"\";\n      this.updateUrl = \"\";\n      this.deleteUrl = \"\";\n    }\n\n    getTalentTest() {\n      const req = new HttpRequest('GET', this.getUrl + \"?userId=1\", {\n        reportProgress: true\n      });\n      return this._http.request(req);\n    }\n\n    getTalent() {\n      this._http.get(this.getUrl + \"?userId=1\").subscribe({\n        next: response => {\n          const talentResponse = [];\n          response.forEach(t => {\n            const talent = {\n              id: t.id,\n              firstname: t.firstname,\n              lastname: t.lastname,\n              gender: t.gender,\n              age: t.age,\n              race: t.race,\n              email: t.email,\n              phone: t.phone\n            };\n            talentResponse.push(talent);\n          });\n          console.log(talentResponse);\n          return talentResponse;\n        },\n        error: reject => {\n          this._errorHandling.httpErrorHandle(reject.status, \"talent\");\n\n          return [];\n        }\n      });\n\n      return [];\n    }\n\n    getSingleTalent(id) {\n      this._http.get(this.getUrl + id + \"?userId=1\").subscribe({\n        next: t => {\n          console.log(t);\n          return {\n            id: t.id,\n            firstname: t.firstname,\n            lastname: t.lastname,\n            gender: t.gender,\n            age: t.age,\n            race: t.race,\n            email: t.email,\n            phone: t.phone\n          };\n        },\n        error: reject => {\n          return this._errorHandling.httpErrorHandle(reject.status, \"talent\");\n        }\n      });\n\n      return null;\n    }\n\n  }\n\n  TalentService.ɵfac = function TalentService_Factory(t) {\n    return new (t || TalentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorHandlingService));\n  };\n\n  TalentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TalentService,\n    factory: TalentService.ɵfac,\n    providedIn: 'root'\n  });\n  return TalentService;\n})();","map":null,"metadata":{},"sourceType":"module"}